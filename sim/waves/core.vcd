$date
	Thu Aug 14 23:44:06 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_core $end
$var wire 1 ! db_resp_r $end
$var wire 1 " ex_mem_loadSigned $end
$var wire 2 # ex_mem_memSize [1:0] $end
$var wire 1 $ ib_resp_r $end
$var wire 1 % mem_wb_jal $end
$var wire 1 & mem_wb_memToReg $end
$var wire 5 ' mem_wb_regDest [4:0] $end
$var wire 1 ( mem_wb_regWrite $end
$var wire 1 ) mem_wb_valid $end
$var wire 32 * mem_wb_wdata [31:0] $end
$var wire 1 + ib_resp_v $end
$var wire 32 , ib_resp_d [31:0] $end
$var wire 1 - ib_req_v $end
$var wire 1 . ib_req_r $end
$var wire 32 / ib_req_a [31:0] $end
$var wire 1 0 db_resp_v $end
$var wire 32 1 db_resp_d [31:0] $end
$var wire 4 2 db_req_ws [3:0] $end
$var wire 32 3 db_req_wd [31:0] $end
$var wire 1 4 db_req_v $end
$var wire 1 5 db_req_r $end
$var wire 32 6 db_req_a [31:0] $end
$var reg 1 7 clk $end
$var reg 1 8 rst_n $end
$scope module dram $end
$var wire 1 7 clk $end
$var wire 1 ! resp_ready $end
$var wire 1 8 rst_n $end
$var wire 1 9 wait_done $end
$var wire 4 : req_wstrb [3:0] $end
$var wire 32 ; req_wdata [31:0] $end
$var wire 1 4 req_valid $end
$var wire 32 < req_addr [31:0] $end
$var wire 32 = aligned_addr [31:0] $end
$var reg 1 > busy $end
$var reg 32 ? lat_addr [31:0] $end
$var reg 32 @ lat_wdata [31:0] $end
$var reg 4 A lat_wstrb [3:0] $end
$var reg 8 B lfsr [7:0] $end
$var reg 1 5 req_ready $end
$var reg 32 C resp_rdata [31:0] $end
$var reg 1 0 resp_valid $end
$var reg 4 D wait_cnt [3:0] $end
$var integer 32 E i [31:0] $end
$upscope $end
$scope module dut $end
$var wire 1 F IF_ID_Write_final $end
$var wire 1 G IF_ID_usesRt $end
$var wire 1 7 clk $end
$var wire 1 H csr_read $end
$var wire 1 I csr_write $end
$var wire 1 5 dbus_req_ready $end
$var wire 32 J dbus_resp_rdata [31:0] $end
$var wire 1 ! dbus_resp_ready $end
$var wire 1 0 dbus_resp_valid $end
$var wire 1 K do_eret_ID $end
$var wire 1 L do_jump_ID $end
$var wire 1 M do_redirect $end
$var wire 1 $ ibus_resp_ready $end
$var wire 1 N mem_req_fire $end
$var wire 1 O mem_resp_fire $end
$var wire 1 P mis_r_EX $end
$var wire 1 Q mis_w_EX $end
$var wire 1 R mispredict_EX $end
$var wire 1 S pcWrite_final $end
$var wire 1 8 rst_n $end
$var wire 32 T storeData_EX [31:0] $end
$var wire 1 U takeBranch_EX $end
$var wire 1 V trap_EX $end
$var wire 32 W trap_cause_EX [31:0] $end
$var wire 5 X shamt [4:0] $end
$var wire 5 Y rt [4:0] $end
$var wire 5 Z rs [4:0] $end
$var wire 1 [ regWrite $end
$var wire 1 \ regDst $end
$var wire 5 ] regDest_EX [4:0] $end
$var wire 32 ^ regData2 [31:0] $end
$var wire 32 _ regData1 [31:0] $end
$var wire 5 ` rd [4:0] $end
$var wire 32 a pc_redirect_target [31:0] $end
$var wire 32 b pc_pred_IF [31:0] $end
$var wire 32 c pc_plus4 [31:0] $end
$var wire 6 d opcode [5:0] $end
$var wire 1 e memWrite $end
$var wire 1 f memToReg $end
$var wire 2 g memSize [1:0] $end
$var wire 1 h memRead $end
$var wire 1 i loadSigned $end
$var wire 32 j jump_target_ID [31:0] $end
$var wire 1 k jump $end
$var wire 1 l jal $end
$var wire 32 m instr_pc_EX [31:0] $end
$var wire 1 n immZeroExt $end
$var wire 32 o immExt [31:0] $end
$var wire 16 p imm [15:0] $end
$var wire 1 + ibus_resp_valid $end
$var wire 32 q ibus_resp_rdata [31:0] $end
$var wire 1 . ibus_req_ready $end
$var wire 1 r hz_pcWrite $end
$var wire 1 s hz_controlBubble $end
$var wire 1 t hz_IF_ID_Write $end
$var wire 32 u fwdB [31:0] $end
$var wire 32 v fwdA [31:0] $end
$var wire 6 w funct [5:0] $end
$var wire 2 x forwardB [1:0] $end
$var wire 2 y forwardA [1:0] $end
$var wire 1 z eret $end
$var wire 32 { csr_rdata [31:0] $end
$var wire 1 | csr_hit $end
$var wire 32 } csr_epc_o [31:0] $end
$var wire 32 ~ csr_cause_o [31:0] $end
$var wire 1 !" branch_ne $end
$var wire 1 "" branch $end
$var wire 32 #" br_target_EX [31:0] $end
$var wire 1 $" br_eq $end
$var wire 32 %" bpu_pred_target [31:0] $end
$var wire 1 &" bpu_pred_taken $end
$var wire 1 '" bpu_pred_hit $end
$var wire 1 (" aluZero $end
$var wire 1 )" aluSrc $end
$var wire 32 *" aluOut [31:0] $end
$var wire 3 +" aluOp [2:0] $end
$var wire 32 ," aluIn2 [31:0] $end
$var wire 2 -" addr_low_MEM [1:0] $end
$var wire 2 ." addr_low_EX [1:0] $end
$var reg 32 /" EX_MEM_aluResult [31:0] $end
$var reg 1 0" EX_MEM_jal $end
$var reg 1 1" EX_MEM_loadSigned $end
$var reg 1 2" EX_MEM_memRead $end
$var reg 2 3" EX_MEM_memSize [1:0] $end
$var reg 1 4" EX_MEM_memToReg $end
$var reg 1 5" EX_MEM_memWrite $end
$var reg 32 6" EX_MEM_pc_link [31:0] $end
$var reg 5 7" EX_MEM_regDest [4:0] $end
$var reg 1 8" EX_MEM_regWrite $end
$var reg 32 9" EX_MEM_storeData [31:0] $end
$var reg 1 :" EX_MEM_valid $end
$var reg 3 ;" ID_EX_aluOp [2:0] $end
$var reg 1 <" ID_EX_aluSrc $end
$var reg 1 =" ID_EX_branch $end
$var reg 1 >" ID_EX_branch_ne $end
$var reg 6 ?" ID_EX_funct [5:0] $end
$var reg 32 @" ID_EX_immExt [31:0] $end
$var reg 1 A" ID_EX_jal $end
$var reg 1 B" ID_EX_loadSigned $end
$var reg 1 C" ID_EX_memRead $end
$var reg 2 D" ID_EX_memSize [1:0] $end
$var reg 1 E" ID_EX_memToReg $end
$var reg 1 F" ID_EX_memWrite $end
$var reg 6 G" ID_EX_opcode [5:0] $end
$var reg 32 H" ID_EX_pc [31:0] $end
$var reg 5 I" ID_EX_rd [4:0] $end
$var reg 32 J" ID_EX_regData1 [31:0] $end
$var reg 32 K" ID_EX_regData2 [31:0] $end
$var reg 1 L" ID_EX_regDst $end
$var reg 1 M" ID_EX_regWrite $end
$var reg 5 N" ID_EX_rs [4:0] $end
$var reg 5 O" ID_EX_rt [4:0] $end
$var reg 5 P" ID_EX_shamt [4:0] $end
$var reg 1 Q" ID_EX_valid $end
$var reg 32 R" IF_ID_instr [31:0] $end
$var reg 32 S" IF_ID_pc [31:0] $end
$var reg 1 T" IF_ID_pred_taken $end
$var reg 32 U" IF_ID_pred_target [31:0] $end
$var reg 1 V" IF_ID_valid $end
$var reg 32 W" MEM_WB_aluResult [31:0] $end
$var reg 1 X" MEM_WB_jal $end
$var reg 32 Y" MEM_WB_memData [31:0] $end
$var reg 1 Z" MEM_WB_memToReg $end
$var reg 32 [" MEM_WB_pc_link [31:0] $end
$var reg 5 \" MEM_WB_regDest [4:0] $end
$var reg 1 ]" MEM_WB_regWrite $end
$var reg 1 ^" MEM_WB_valid $end
$var reg 1 _" bpu_upd_en $end
$var reg 32 `" bpu_upd_pc [31:0] $end
$var reg 1 a" bpu_upd_taken $end
$var reg 32 b" bpu_upd_target [31:0] $end
$var reg 32 c" csr_cause_w [31:0] $end
$var reg 32 d" csr_epc_w [31:0] $end
$var reg 1 e" csr_retire_pulse $end
$var reg 1 f" csr_upd_trap $end
$var reg 32 g" dbus_req_addr [31:0] $end
$var reg 1 4 dbus_req_valid $end
$var reg 32 h" dbus_req_wdata [31:0] $end
$var reg 4 i" dbus_req_wstrb [3:0] $end
$var reg 32 j" ibus_req_addr [31:0] $end
$var reg 1 - ibus_req_valid $end
$var reg 32 k" if_buf_instr [31:0] $end
$var reg 32 l" if_buf_pc_plus4 [31:0] $end
$var reg 1 m" if_buf_pred_taken $end
$var reg 32 n" if_buf_pred_target [31:0] $end
$var reg 1 o" if_buf_valid $end
$var reg 1 p" if_busy $end
$var reg 1 q" if_kill $end
$var reg 32 r" if_req_pc [31:0] $end
$var reg 1 s" if_req_pred_taken $end
$var reg 32 t" if_req_pred_target [31:0] $end
$var reg 32 u" load_aligned [31:0] $end
$var reg 1 v" mem_busy $end
$var reg 1 w" mem_out_is_load $end
$var reg 1 x" mem_out_is_store $end
$var reg 32 y" pc [31:0] $end
$var reg 32 z" wdata_aligned [31:0] $end
$var reg 4 {" wstrb [3:0] $end
$scope module u_alu $end
$var wire 3 |" aluOp [2:0] $end
$var wire 6 }" funct [5:0] $end
$var wire 32 ~" in1 [31:0] $end
$var wire 32 !# in2 [31:0] $end
$var wire 5 "# shamt [4:0] $end
$var wire 32 ## sra [31:0] $end
$var reg 32 $# result [31:0] $end
$var reg 1 (" zero $end
$upscope $end
$scope module u_bpu $end
$var wire 1 7 clk $end
$var wire 32 %# if_pc [31:0] $end
$var wire 1 '" pred_hit $end
$var wire 32 &# pred_target [31:0] $end
$var wire 1 8 rst_n $end
$var wire 1 _" update_en $end
$var wire 32 '# update_pc [31:0] $end
$var wire 1 a" update_taken $end
$var wire 32 (# update_target [31:0] $end
$var wire 20 )# tag_up [19:0] $end
$var wire 20 *# tag_if [19:0] $end
$var wire 1 &" pred_taken $end
$var wire 5 +# btb_idx_up [4:0] $end
$var wire 5 ,# btb_idx_if [4:0] $end
$var wire 6 -# bht_idx_up [5:0] $end
$var wire 6 .# bht_idx_if [5:0] $end
$var integer 32 /# i [31:0] $end
$var integer 32 0# j [31:0] $end
$upscope $end
$scope module u_csr $end
$var wire 32 1# addr [31:0] $end
$var wire 32 2# cause_ro [31:0] $end
$var wire 32 3# cause_w [31:0] $end
$var wire 1 7 clk $end
$var wire 32 4# epc_ro [31:0] $end
$var wire 32 5# epc_w [31:0] $end
$var wire 1 R flush_event $end
$var wire 1 e" retire_event $end
$var wire 1 8 rst_n $end
$var wire 1 6# stall_event $end
$var wire 1 f" trap_set $end
$var reg 32 7# cause [31:0] $end
$var reg 64 8# cycle [63:0] $end
$var reg 32 9# epc [31:0] $end
$var reg 32 :# flush_count [31:0] $end
$var reg 64 ;# instret [63:0] $end
$var reg 32 <# rdata [31:0] $end
$var reg 32 =# stall_cycles [31:0] $end
$upscope $end
$scope module u_ctrl $end
$var wire 6 ># funct [5:0] $end
$var wire 6 ?# opcode [5:0] $end
$var reg 3 @# aluOp [2:0] $end
$var reg 1 )" aluSrc $end
$var reg 1 "" branch $end
$var reg 1 !" branch_ne $end
$var reg 1 z eret $end
$var reg 1 n immZeroExt $end
$var reg 1 l jal $end
$var reg 1 k jump $end
$var reg 1 i loadSigned $end
$var reg 1 h memRead $end
$var reg 2 A# memSize [1:0] $end
$var reg 1 f memToReg $end
$var reg 1 e memWrite $end
$var reg 1 \ regDst $end
$var reg 1 [ regWrite $end
$upscope $end
$scope module u_fwd $end
$var wire 5 B# EX_MEM_rd [4:0] $end
$var wire 1 8" EX_MEM_regWrite $end
$var wire 5 C# ID_EX_rs [4:0] $end
$var wire 5 D# ID_EX_rt [4:0] $end
$var wire 5 E# MEM_WB_rd [4:0] $end
$var wire 1 ]" MEM_WB_regWrite $end
$var reg 2 F# forwardA [1:0] $end
$var reg 2 G# forwardB [1:0] $end
$upscope $end
$scope module u_hz $end
$var wire 1 C" ID_EX_memRead $end
$var wire 5 H# ID_EX_rt [4:0] $end
$var wire 5 I# IF_ID_rs [4:0] $end
$var wire 5 J# IF_ID_rt [4:0] $end
$var wire 1 G IF_ID_usesRt $end
$var reg 1 t IF_ID_Write $end
$var reg 1 s controlBubble $end
$var reg 1 r pcWrite $end
$upscope $end
$scope module u_rf $end
$var wire 1 7 clk $end
$var wire 5 K# ra1 [4:0] $end
$var wire 5 L# ra2 [4:0] $end
$var wire 5 M# wa [4:0] $end
$var wire 32 N# wd [31:0] $end
$var wire 1 ]" we $end
$var wire 32 O# rd2 [31:0] $end
$var wire 32 P# rd1 [31:0] $end
$var integer 32 Q# i [31:0] $end
$upscope $end
$upscope $end
$scope module irom $end
$var wire 1 7 clk $end
$var wire 32 R# req_addr [31:0] $end
$var wire 1 - req_valid $end
$var wire 1 $ resp_ready $end
$var wire 1 8 rst_n $end
$var wire 1 S# wait_done $end
$var wire 32 T# aligned_addr [31:0] $end
$var reg 1 U# busy $end
$var reg 32 V# lat_addr [31:0] $end
$var reg 8 W# lfsr [7:0] $end
$var reg 1 . req_ready $end
$var reg 32 X# resp_rdata [31:0] $end
$var reg 1 + resp_valid $end
$var reg 4 Y# wait_cnt [3:0] $end
$var integer 32 Z# i [31:0] $end
$upscope $end
$scope module u_sb $end
$var wire 1 7 clk $end
$var wire 32 [# dbus_req_addr [31:0] $end
$var wire 1 5 dbus_req_ready $end
$var wire 1 4 dbus_req_valid $end
$var wire 32 \# dbus_req_wdata [31:0] $end
$var wire 4 ]# dbus_req_wstrb [3:0] $end
$var wire 32 ^# dbus_resp_rdata [31:0] $end
$var wire 1 0 dbus_resp_valid $end
$var wire 1 " ex_mem_loadSigned $end
$var wire 2 _# ex_mem_memSize [1:0] $end
$var wire 1 % mem_wb_jal $end
$var wire 1 & mem_wb_memToReg $end
$var wire 5 `# mem_wb_regDest [4:0] $end
$var wire 1 ( mem_wb_regWrite $end
$var wire 1 ) mem_wb_valid $end
$var wire 32 a# mem_wb_wdata [31:0] $end
$var wire 1 b# req_fire $end
$var wire 1 c# resp_fire $end
$var wire 1 8 rst_n $end
$var reg 32 d# after_w [31:0] $end
$var reg 32 e# before_w [31:0] $end
$var reg 32 f# expected_w [31:0] $end
$var reg 32 g# t_addr [31:0] $end
$var reg 1 h# t_is_csr $end
$var reg 1 i# t_is_store $end
$var reg 1 j# t_signed $end
$var reg 2 k# t_size [1:0] $end
$var reg 32 l# t_wdata [31:0] $end
$var reg 4 m# t_wstrb [3:0] $end
$var integer 32 n# i [31:0] $end
$var integer 32 o# idx [31:0] $end
$var integer 32 p# q_count [31:0] $end
$var integer 32 q# q_head [31:0] $end
$var integer 32 r# q_tail [31:0] $end
$scope function load_align $end
$var reg 32 s# addr [31:0] $end
$var reg 32 t# rdata [31:0] $end
$var reg 1 u# sgn $end
$var reg 2 v# size [1:0] $end
$var reg 32 w# x [31:0] $end
$upscope $end
$scope function rd_word $end
$var reg 32 x# addr [31:0] $end
$var integer 32 y# li [31:0] $end
$upscope $end
$scope function wr_merge $end
$var reg 32 z# oldw [31:0] $end
$var reg 32 {# r [31:0] $end
$var reg 32 |# wdata [31:0] $end
$var reg 4 }# wstrb [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx }#
bx |#
bx {#
bx z#
bx y#
bx x#
bx w#
bx v#
xu#
bx t#
bx s#
b0 r#
b0 q#
b0 p#
bx o#
b10000000000000000 n#
bx m#
bx l#
bx k#
xj#
xi#
xh#
bx g#
bx f#
bx e#
bx d#
xc#
xb#
bx a#
bx `#
bx _#
bx ^#
bx ]#
bx \#
bx [#
b10000000000 Z#
bx Y#
bx X#
bx W#
bx V#
xU#
bx00 T#
xS#
bx R#
b100000 Q#
bx P#
bx O#
bx N#
bx M#
bx L#
bx K#
bx J#
bx I#
bx H#
bx G#
bx F#
bx E#
bx D#
bx C#
bx B#
bx A#
bx @#
bx ?#
bx >#
bx =#
bx <#
bx ;#
bx :#
bx 9#
bx 8#
bx 7#
x6#
bx 5#
bx 4#
bx 3#
bx 2#
bx 1#
b100000 0#
b1000000 /#
bx .#
bx -#
bx ,#
bx +#
bx *#
bx )#
bx (#
bx '#
bx &#
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
xx"
xw"
xv"
bx u"
bx t"
xs"
bx r"
xq"
xp"
xo"
bx n"
xm"
bx l"
bx k"
bx j"
bx i"
bx h"
bx g"
xf"
xe"
bx d"
bx c"
bx b"
xa"
bx `"
x_"
x^"
x]"
bx \"
bx ["
xZ"
bx Y"
xX"
bx W"
xV"
bx U"
xT"
bx S"
bx R"
xQ"
bx P"
bx O"
bx N"
xM"
xL"
bx K"
bx J"
bx I"
bx H"
bx G"
xF"
xE"
bx D"
xC"
xB"
xA"
bx @"
bx ?"
x>"
x="
x<"
bx ;"
x:"
bx 9"
x8"
bx 7"
bx 6"
x5"
x4"
bx 3"
x2"
x1"
x0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
x)"
x("
x'"
x&"
bx %"
x$"
bx #"
x""
x!"
bx ~
bx }
x|
bx {
xz
bx y
bx x
bx w
bx v
bx u
xt
xs
xr
bx q
bx p
bx o
xn
bx m
xl
xk
bx00 j
xi
xh
bx g
xf
xe
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
x\
x[
bx Z
bx Y
bx X
b0xx W
xV
xU
bx T
xS
xR
xQ
xP
xO
xN
xM
xL
xK
bx J
xI
xH
xG
xF
b10000000000 E
bx D
bx C
bx B
bx A
bx @
bx ?
x>
bx00 =
bx <
bx ;
bx :
x9
08
07
bx 6
x5
x4
bx 3
bx 2
bx 1
x0
bx /
x.
x-
bx ,
x+
bx *
x)
x(
bx '
x&
x%
1$
bx #
x"
1!
$end
#5000
0M
b0 ."
1G
b100 a
1("
0V
b0 W
b0 ##
b0 ,"
b0 !#
0&"
0'"
0z
1i
b0 g
b0 A#
b0 +"
b0 @#
0n
0l
0k
0!"
0""
0e
0h
1[
0f
0)"
1\
b0 o
b0 _
b0 P#
b0 ^
b0 O#
0Q
0P
b0 b"
b0 (#
0a"
1$"
b0 T
b0 u
b0 v
b0 ~"
b111111 -#
b11111 +#
b11111111111111111111 )#
0R
1F
1S
b100 b
b0 .#
b0 %"
b0 &#
b0 ,#
b0 *#
b0 T#
b0 d
b0 ?#
b0 Z
b0 I#
b0 Y
b0 J#
b0 `
b0 X
b0 w
b0 >#
b0 p
b0 j
b0 K#
b0 L#
0K
0L
b0 ]
0U
b0 *"
b0 $#
0s
1t
1r
b0 #"
b11111111111111111111111111111100 `"
b11111111111111111111111111111100 '#
0_"
0I
0H
b0 z"
b1111 {"
b0 -"
b11011110101011011011111011101111 {
b11011110101011011011111011101111 <#
0|
b0 =
06#
b0 x
b0 G#
b0 y
b0 F#
b0 N#
b0 *
b0 a#
0e"
b0 u"
0O
0N
0b#
b0 ~
b0 2#
b0 7#
b0 }
b0 4#
b0 9#
b0 :#
b0 =#
b0 ;#
b0 8#
b100 c
b0 y"
b0 %#
b0 n"
0m"
b0 l"
b0 k"
b0 t"
0s"
b0 r"
0q"
0p"
b0 /
b0 j"
b0 R#
0-
0o"
b0 U"
0T"
b0 S"
b0 R"
0V"
1B"
b0 D"
0A"
0L"
0<"
b0 ;"
b0 |"
0>"
0="
0E"
0F"
0C"
0M"
b0 G"
b0 ?"
b0 }"
b0 P"
b0 "#
b0 I"
b0 O"
b0 D#
b0 H#
b0 N"
b0 C#
b0 @"
b0 K"
b0 J"
b11111111111111111111111111111100 m
b0 H"
0Q"
1"
11"
b0 #
b0 _#
b0 3"
00"
04"
05"
02"
08"
b0 7"
b0 B#
b0 6"
b0 9"
b0 /"
b0 1#
0:"
b0 c"
b0 3#
b0 d"
b0 5#
0f"
0x"
0w"
b0 2
b0 :
b0 i"
b0 ]#
b0 3
b0 ;
b0 h"
b0 \#
b0 6
b0 <
b0 g"
b0 [#
04
0v"
0%
0X"
0&
0Z"
0(
0]"
b0 '
b0 `#
b0 \"
b0 E#
b0 M#
b0 ["
b0 Y"
b0 W"
0)
0^"
b0 ,
b0 q
b0 X#
b0 V#
b10100101 W#
1S#
b0 Y#
0U#
0+
0.
b0 1
b0 C
b0 J
b0 ^#
b0 A
b0 @
b0 ?
b10100101 B
19
b0 D
0>
0c#
00
05
17
#10000
07
#15000
17
#20000
07
#25000
17
#30000
07
#35000
17
#40000
07
#45000
17
#50000
07
#55000
17
#60000
07
#65000
17
#70000
07
#75000
17
#80000
07
#85000
17
#90000
07
#95000
15
b1001010 B
1.
b1001010 W#
b11111111111111111111111111111100 d"
b11111111111111111111111111111100 5#
1L"
1M"
1-
b1 8#
18
17
#100000
07
#105000
b1000 a
b1000 b
b1 .#
b1 ,#
16#
b10 8#
b1000 c
b100 y"
b100 %#
0-
1p"
18"
0S#
b10 Y#
1U#
b10010101 W#
b10010101 B
17
#110000
07
#115000
b101010 B
b1 Y#
0.
b101010 W#
1(
1]"
b1 =#
b11 8#
17
#120000
07
#125000
b10 =#
b100 8#
1S#
b0 Y#
b1010100 W#
b1010100 B
17
#130000
07
#135000
b10101001 B
0U#
1+
b100000000000010000000000000101 ,
b100000000000010000000000000101 q
b100000000000010000000000000101 X#
b10101001 W#
b11 =#
b101 8#
17
#140000
07
#145000
06#
b100 =#
b110 8#
0p"
b100 l"
b100000000000010000000000000101 k"
1o"
0+
1.
b1010011 W#
b1010011 B
17
#150000
07
#155000
0G
b10 +"
b10 @#
1)"
1[
0\
b101 o
b1000 d
b1000 ?#
b1 Y
b1 J#
b101 w
b101 >#
b101 p
b1000000000000010100 j
b1 L#
b10100111 B
b10100111 W#
0o"
b100 S"
b100000000000010000000000000101 R"
1V"
b111 8#
17
#160000
07
#165000
b1 ."
b1 ]
0("
b101 *"
b101 $#
b0 -#
b0 +#
b0 )#
b100 T#
b101 ##
b101 ,"
b101 !#
b11000 b"
b11000 (#
b0 `"
b0 '#
b1000 8#
b100 r"
b100 /
b100 j"
b100 R#
1-
0L"
1<"
b10 ;"
b10 |"
b1000 G"
b101 ?"
b101 }"
b1 O"
b1 D#
b1 H#
b101 @"
b11000 #"
b0 m
b100 H"
1Q"
b1001110 W#
b1001110 B
17
#170000
07
#175000
b1100 a
0$"
b101 T
b101 u
b1111 {"
b10 x
b10 G#
b1 -"
16#
b1100 b
b10 .#
b10 ,#
b10011101 B
1U#
b100 V#
b10011101 W#
b0 d"
b0 5#
b1 7"
b1 B#
b100 6"
b101 /"
b101 1#
1:"
0-
1p"
b1100 c
b1000 y"
b1000 %#
b1001 8#
17
#180000
07
#185000
0$"
b101 T
b101 u
b101 N#
b101 *
b101 a#
b101 z"
b1111 {"
1e"
b1 x
b1 G#
b101 =#
b1010 8#
b101 9"
1)
1^"
b1 '
b1 `#
b1 \"
b1 E#
b1 M#
b100 ["
b101 W"
0U#
1+
b100000000000100000000000001010 ,
b100000000000100000000000001010 q
b100000000000100000000000001010 X#
0.
b111011 W#
b111011 B
17
#190000
07
#195000
06#
b101 ^
b101 O#
b1110111 B
0+
1.
b1110111 W#
0p"
b1000 l"
b100000000000100000000000001010 k"
1o"
b1 ;#
b110 =#
b1011 8#
17
#200000
07
#205000
b1010 o
b0 ^
b0 O#
b10 Y
b10 J#
b1010 w
b1010 >#
b1010 p
b10000000000000101000 j
b10 L#
b10 ;#
b1100 8#
0o"
b1000 S"
b100000000000100000000000001010 R"
b101 K"
b11101110 W#
b11101110 B
17
#210000
07
#215000
1$"
b0 T
b0 u
b10 ."
b10 ]
b1 -#
b1 +#
b1010 *"
b1010 $#
b0 x
b0 G#
b1010 ##
b1010 ,"
b1010 !#
b110000 b"
b110000 (#
b100 `"
b100 '#
b1000 T#
b11011101 B
b11011101 W#
b1010 ?"
b1010 }"
b10 O"
b10 D#
b10 H#
b1010 @"
b0 K"
b110000 #"
b100 m
b1000 H"
b1000 r"
b1000 /
b1000 j"
b1000 R#
1-
b11 ;#
b1101 8#
17
#220000
07
#225000
b10000 a
0$"
b1010 T
b1010 u
b10000 b
b11 .#
b11 ,#
16#
b10 x
b10 G#
b0 z"
b1111 {"
b10 -"
b100 ;#
b1110 8#
b10000 c
b1100 y"
b1100 %#
0-
1p"
b10 7"
b10 B#
b1000 6"
b0 9"
b1010 /"
b1010 1#
b100 d"
b100 5#
0S#
b101 Y#
1U#
b1000 V#
b10111011 W#
b10111011 B
17
#230000
07
#235000
0$"
b1010 T
b1010 u
b1010 N#
b1010 *
b1010 a#
b1 x
b1 G#
b1010 z"
b1111 {"
b1110110 B
b100 Y#
0.
b1110110 W#
b10 '
b10 `#
b10 \"
b10 E#
b10 M#
b1000 ["
b1010 W"
b1010 9"
b101 ;#
b111 =#
b1111 8#
17
#240000
07
#245000
b1010 ^
b1010 O#
b110 ;#
b1000 =#
b10000 8#
b11 Y#
b11101100 W#
b11101100 B
17
#250000
07
#255000
b11011001 B
b10 Y#
b11011001 W#
b1010 K"
b111 ;#
b1001 =#
b10001 8#
17
#260000
07
#265000
b1000 ;#
b1010 =#
b10010 8#
b1 Y#
b10110011 W#
b10110011 B
17
#270000
07
#275000
b1100111 B
1S#
b0 Y#
b1100111 W#
b1001 ;#
b1011 =#
b10011 8#
17
#280000
07
#285000
b1010 ;#
b1100 =#
b10100 8#
0U#
1+
b1000100001100000100000 ,
b1000100001100000100000 q
b1000100001100000100000 X#
b11001111 W#
b11001111 B
17
#290000
07
#295000
06#
b10011110 B
0+
1.
b10011110 W#
0p"
b1100 l"
b1000100001100000100000 k"
1o"
b1011 ;#
b1101 =#
b10101 8#
17
#300000
07
#305000
1G
1\
b0 +"
b0 @#
1[
0)"
b1100000100000 o
b101 _
b101 P#
b0 d
b0 ?#
b1 Z
b1 I#
b11 `
b100000 w
b100000 >#
b1100000100000 p
b100010000110000010000000 j
b1 K#
b1100 ;#
b10110 8#
0o"
b1100 S"
b1000100001100000100000 R"
b111101 W#
b111101 B
17
#310000
07
#315000
b11 ."
b11 ]
b101 v
b101 ~"
b10 -#
b10 +#
b1111 *"
b1111 $#
b1 x
b1 G#
b110000010001100 b"
b110000010001100 (#
b1000 `"
b1000 '#
b1100 T#
b1111011 B
b1111011 W#
1L"
0<"
b0 ;"
b0 |"
b0 G"
b100000 ?"
b100000 }"
b11 I"
b1 N"
b1 C#
b1100000100000 @"
b101 J"
b110000010001100 #"
b1000 m
b1100 H"
b1100 r"
b1100 /
b1100 j"
b1100 R#
1-
b1101 ;#
b10111 8#
17
#320000
07
#325000
b10100 a
b1010 z"
b1111 {"
b10100 b
b100 .#
b100 ,#
16#
b1 x
b1 G#
b11 -"
b1110 ;#
b11000 8#
b10100 c
b10000 y"
b10000 %#
0-
1p"
b11 7"
b11 B#
b1100 6"
b1111 /"
b1111 1#
b1000 d"
b1000 5#
0S#
b11 Y#
1U#
b1100 V#
b11110111 W#
b11110111 B
17
#330000
07
#335000
b1111 N#
b1111 *
b1111 a#
b0 x
b0 G#
b11101111 B
b10 Y#
0.
b11101111 W#
b11 '
b11 `#
b11 \"
b11 E#
b11 M#
b1100 ["
b1111 W"
b1111 ;#
b1110 =#
b11001 8#
17
#340000
07
#345000
b10000 ;#
b1111 =#
b11010 8#
b1 Y#
b11011111 W#
b11011111 B
17
#350000
07
#355000
b10111111 B
1S#
b0 Y#
b10111111 W#
b10001 ;#
b10000 =#
b11011 8#
17
#360000
07
#365000
b10010 ;#
b10001 =#
b11100 8#
0U#
1+
b10101100000000110000000000000000 ,
b10101100000000110000000000000000 q
b10101100000000110000000000000000 X#
b1111110 W#
b1111110 B
17
#370000
07
#375000
06#
b11111101 B
0+
1.
b11111101 W#
0p"
b10000 l"
b10101100000000110000000000000000 k"
1o"
b10011 ;#
b10010 =#
b11101 8#
17
#380000
07
#385000
b10 +"
b10 @#
1e
1)"
0[
0\
b0 o
b0 _
b0 P#
b1111 ^
b1111 O#
b101011 d
b101011 ?#
b0 Z
b0 I#
b11 Y
b11 J#
b0 `
b0 w
b0 >#
b0 p
b11000000000000000000 j
b0 K#
b11 L#
b10100 ;#
b11110 8#
0o"
b10000 S"
b10101100000000110000000000000000 R"
b11111010 W#
b11111010 B
17
#390000
07
#395000
0M
b10100 a
b0 W
b0 ."
0V
1("
0Q
b1111 T
b1111 u
b0 v
b0 ~"
b11 -#
b11 +#
b0 ##
b0 ,"
b0 !#
b0 *"
b0 $#
b1 x
b1 G#
b10000 b"
b10000 (#
b1100 `"
b1100 '#
b10000 T#
b11110100 B
b11110100 W#
0L"
1<"
b10 ;"
b10 |"
1F"
0M"
b101011 G"
b0 ?"
b0 }"
b0 I"
b11 O"
b11 D#
b11 H#
b0 N"
b0 C#
b0 @"
b1111 K"
b0 J"
b10000 #"
b1100 m
b10000 H"
b10000 r"
b10000 /
b10000 j"
b10000 R#
1-
b10101 ;#
b11111 8#
17
#400000
07
#405000
b11000 a
b11000 b
b101 .#
b101 ,#
16#
b1 x
b1 G#
b1111 z"
b1111 {"
b0 -"
b10110 ;#
b100000 8#
b11000 c
b10100 y"
b10100 %#
0-
1p"
15"
08"
b10000 6"
b1111 9"
b0 /"
b0 1#
b1100 d"
b1100 5#
0S#
b100 Y#
1U#
b10000 V#
b11101001 W#
b11101001 B
17
#410000
07
#415000
b0 N#
b0 *
b0 a#
0e"
b0 x
b0 G#
1b#
1N
b11010011 B
b11 Y#
0.
b11010011 W#
0)
0^"
0(
0]"
b10000 ["
b0 W"
b1111 2
b1111 :
b1111 i"
b1111 ]#
b1111 3
b1111 ;
b1111 h"
b1111 \#
14
b10111 ;#
b10011 =#
b100001 8#
17
#420000
07
#425000
0F
0S
0b#
0N
b10100 =#
b100010 8#
b0 2
b0 :
b0 i"
b0 ]#
04
1x"
1v"
b10 Y#
b10100110 W#
09
b11 D
1>
b1111 A
b1111 @
b10100110 B
b1 p#
b1 r#
17
#430000
07
#435000
b10 D
05
b1001100 B
b1 Y#
b1001100 W#
b10101 =#
b100011 8#
17
#440000
07
#445000
b10110 =#
b100100 8#
1S#
b0 Y#
b10011001 W#
b1 D
b10011001 B
17
#450000
07
#455000
19
b0 D
b110011 B
0U#
1+
b10001100000001000000000000000000 ,
b10001100000001000000000000000000 q
b10001100000001000000000000000000 X#
b110011 W#
b10111 =#
b100101 8#
17
#460000
07
#465000
1e"
1O
b11000 =#
b100110 8#
0p"
b10100 l"
b10001100000001000000000000000000 k"
1o"
0+
1.
b1100110 W#
0>
1c#
10
b1100110 B
17
#470000
07
#475000
0e"
1F
1S
0O
06#
b0 p#
b1 q#
0c#
00
15
b11001101 B
b11001101 W#
0v"
b11000 ;#
b11001 =#
b100111 8#
b1111 d#
b1111 {#
b0 z#
b1111 |#
b1111 }#
b0 e#
b0 y#
b0 x#
b0 o#
0h#
1i#
1j#
b0 k#
b1111 m#
b1111 l#
b0 g#
17
#480000
07
#485000
0G
1h
1[
1f
b10 +"
b10 @#
0e
1)"
b0 ^
b0 O#
b100011 d
b100011 ?#
b100 Y
b100 J#
b100000000000000000000 j
b100 L#
1b#
1N
b101000 8#
0o"
b10100 S"
b10001100000001000000000000000000 R"
b1111 2
b1111 :
b1111 i"
b1111 ]#
14
b10011010 W#
b10011010 B
17
#490000
07
#495000
0F
0S
b100 ]
1$"
b0 T
b0 u
b100 -#
b100 +#
0b#
0N
16#
b10100 b"
b10100 (#
b10000 `"
b10000 '#
b10100 T#
b1 p#
b10 r#
09
b1011 D
1>
b110101 B
b110101 W#
b0 2
b0 :
b0 i"
b0 ]#
04
1v"
1E"
0F"
1C"
1M"
b100011 G"
b100 O"
b100 D#
b100 H#
b0 K"
b10100 #"
b10000 m
b10100 H"
b10100 r"
b10100 /
b10100 j"
b10100 R#
1-
b101001 8#
17
#500000
07
#505000
b11100 a
b11100 b
b110 .#
b110 ,#
b10 x
b10 G#
b0 z"
b1111 {"
b11010 =#
b101010 8#
b11100 c
b11000 y"
b11000 %#
0-
1p"
14"
05"
12"
18"
b100 7"
b100 B#
b10100 6"
b0 9"
b10000 d"
b10000 5#
0S#
b101 Y#
1U#
b10100 V#
b1101010 W#
b1010 D
05
b1101010 B
17
#510000
07
#515000
b10 x
b10 G#
b1001 D
b11010100 B
b100 Y#
0.
b11010100 W#
1&
1Z"
b100 '
b100 `#
b100 \"
b100 E#
b100 M#
b10100 ["
b11011 =#
b101011 8#
17
#520000
07
#525000
b11100 =#
b101100 8#
b11 Y#
b10101000 W#
b1000 D
b10101000 B
17
#530000
07
#535000
b111 D
b1010001 B
b10 Y#
b1010001 W#
b11101 =#
b101101 8#
17
#540000
07
#545000
b11110 =#
b101110 8#
b1 Y#
b10100011 W#
b110 D
b10100011 B
17
#550000
07
#555000
b101 D
b1000110 B
1S#
b0 Y#
b1000110 W#
b11111 =#
b101111 8#
17
#560000
07
#565000
b100000 =#
b110000 8#
0U#
1+
b100000100001000000000000000001 ,
b100000100001000000000000000001 q
b100000100001000000000000000001 X#
b10001100 W#
b100 D
b10001100 B
17
#570000
07
#575000
b11 D
b11000 B
0+
1.
b11000 W#
0p"
b11000 l"
b100000100001000000000000000001 k"
1o"
b100001 =#
b110001 8#
17
#580000
07
#585000
b100010 =#
b110010 8#
b110000 W#
b10 D
b110000 B
17
#590000
07
#595000
b1 D
b1100000 B
b1100000 W#
b100011 =#
b110011 8#
17
#600000
07
#605000
b100100 =#
b110100 8#
b11000001 W#
19
b0 D
b11000001 B
17
#610000
07
#615000
1e"
1O
b1111 u"
0>
1c#
10
b1111 1
b1111 C
b1111 J
b1111 ^#
b10000011 B
b10000011 W#
b100101 =#
b110101 8#
17
#620000
07
#625000
1F
1S
0e"
06#
0O
b11001 ;#
b100110 =#
b110110 8#
0v"
b111 W#
0c#
00
15
b111 B
b0 p#
b10 q#
b1111 z#
b1111 e#
17
#630000
07
#635000
0F
0S
b10 +"
b10 @#
0h
1[
0f
1)"
1s
0t
0r
b1 o
1b#
1N
b1000 d
b1000 ?#
b100 Z
b100 I#
b1 w
b1 >#
b1 p
b10000100000000000000000100 j
b100 K#
b1110 B
b1110 W#
b0 3
b0 ;
b0 h"
b0 \#
14
0o"
b11000 S"
b100000100001000000000000000001 R"
b110111 8#
17
#640000
07
#645000
b11000 T#
0s
1t
1r
0b#
0N
16#
b111000 8#
b11000 r"
b11000 /
b11000 j"
b11000 R#
1-
0<"
0E"
0C"
0M"
0Q"
04
0x"
1w"
1v"
b11101 W#
09
b1 D
1>
b0 A
b0 @
b11101 B
b1 p#
b11 r#
17
#650000
07
#655000
b100000 a
b0 x
b0 G#
b100000 b
b111 .#
b111 ,#
19
b0 D
05
b111010 B
0S#
b101 Y#
1U#
b11000 V#
b111010 W#
04"
02"
08"
0:"
0-
1p"
b100000 c
b11100 y"
b11100 %#
b100111 =#
b111001 8#
17
#660000
07
#665000
1e"
1O
b101000 =#
b111010 8#
0&
0Z"
b100 Y#
0.
b1110101 W#
0>
1c#
10
b1110101 B
17
#670000
07
#675000
1F
1S
0O
b0 p#
b11 q#
0c#
00
15
b11101010 B
b11 Y#
b11101010 W#
1)
1^"
b1111 Y"
0v"
b11010 ;#
b101001 =#
b111011 8#
b1111 f#
b1111 w#
b1111 t#
b0 v#
b0 s#
1u#
0i#
b0 m#
b0 l#
17
